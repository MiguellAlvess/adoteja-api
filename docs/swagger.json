{
  "openapi": "3.0.0",
  "info": {
    "title": "AdoteJÃ¡",
    "description": "API for managing pet adoptions",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/accounts": {
      "post": {
        "summary": "Create a new account",
        "tags": ["Accounts"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountWithToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAlreadyInUseErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/me": {
      "get": {
        "summary": "Get authenticated account",
        "tags": ["Accounts"],
        "responses": {
          "200": {
            "description": "Account found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update authenticated account",
        "tags": ["Accounts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNotFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAlreadyInUseErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete authenticated account",
        "tags": ["Accounts"],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login with email and password",
        "tags": ["Accounts"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountWithToken"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets": {
      "get": {
        "summary": "Get all pets",
        "tags": ["Pets"],
        "responses": {
          "200": {
            "description": "Pets found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new pet",
        "tags": ["Pets"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "species", "gender", "age", "size"],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rex"
                  },
                  "species": {
                    "type": "string",
                    "minLength": 1,
                    "example": "dog"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["MALE", "FEMALE"],
                    "example": "MALE"
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 40,
                    "example": 3
                  },
                  "size": {
                    "type": "string",
                    "enum": ["SMALL", "MEDIUM", "LARGE"],
                    "example": "LARGE"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Cachorro muito carinhoso e brincalhÃ£o. Gosta de crianÃ§as e outros animais."
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Photo file for the pet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/{id}": {
      "get": {
        "summary": "Get pet by ID",
        "tags": ["Pets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pet ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Pet found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "403": {
            "description": "Only the owner can perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotPetOwnerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update pet",
        "tags": ["Pets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pet ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Rex Junior"
                  },
                  "species": {
                    "type": "string",
                    "minLength": 1,
                    "example": "dog"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["MALE", "FEMALE"],
                    "example": "MALE"
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 40,
                    "example": 4
                  },
                  "size": {
                    "type": "string",
                    "enum": ["SMALL", "MEDIUM", "LARGE"],
                    "example": "LARGE"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Cachorro muito carinhoso e brincalhÃ£o. Gosta de crianÃ§as e outros animais."
                  },
                  "status": {
                    "type": "string",
                    "enum": ["AVAILABLE", "ADOPTED"],
                    "example": "AVAILABLE"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Photo file for the pet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Only the owner can perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotPetOwnerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete pet",
        "tags": ["Pets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pet ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Pet deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetDeletedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Only the owner can perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotPetOwnerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/{petId}/adoptions": {
      "get": {
        "summary": "Get adoptions for a specific pet",
        "tags": ["Adoptions"],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pet ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Adoptions found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Adoption"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/adoptions": {
      "post": {
        "summary": "Request adoption",
        "tags": ["Adoptions"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdoptionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Adoption request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adoption"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Pet is not available for adoption or adoption already requested",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PetNotAvailableForAdoptionResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdoptionAlreadyRequestedResponse"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/adoptions/{id}": {
      "get": {
        "summary": "Get adoption by ID",
        "tags": ["Adoptions"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Adoption ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Adoption found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adoption"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Adoption not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/adoptions/{id}/approve": {
      "patch": {
        "summary": "Approve adoption",
        "tags": ["Adoptions"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Adoption ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Adoption approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adoption"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Adoption not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/adoptions/{id}/reject": {
      "patch": {
        "summary": "Reject adoption",
        "tags": ["Adoptions"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Adoption ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Adoption rejected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adoption"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Adoption not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/adoptions/{id}/complete": {
      "patch": {
        "summary": "Complete adoption",
        "tags": ["Adoptions"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Adoption ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Adoption completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adoption"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Adoption not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/adoptions/me": {
      "get": {
        "summary": "Get authenticated user's adoptions",
        "tags": ["Adoptions"],
        "responses": {
          "200": {
            "description": "User adoptions found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Adoption"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter 'Bearer' followed by your token. Example 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'"
      }
    },
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "name": {
            "type": "string",
            "example": "JoÃ£o Silva"
          },
          "email": {
            "type": "string",
            "example": "joao@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+55 11 99999-9999"
          },
          "city": {
            "type": "string",
            "example": "SÃ£o Paulo"
          },
          "state": {
            "type": "string",
            "example": "SP"
          }
        }
      },
      "AccountWithToken": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJiZWY5NmU2YS0wNGM5LTQ3YzUtYjIyZS0wMTFiZjI5YzQxN2QiLCJpYXQiOjE3NDc2OTE0MDEsImV4cCI6MTc0NzY5MjMwMX0.Fm3u2j9Omtc-rvfVJcef5Gu7CRKiAcXLV0DXEgGWLzk"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJiZWY5NmU2YS0wNGM5LTQ3YzUtYjIyZS0wMTFiZjI5YzQxN2QiLCJpYXQiOjE3NDc2OTE0MDEsImV4cCI6MTc1MDI4MzQwMX0.ZYu8ZfmfmqzyTs4bTvnA4x5DAISPUoURdCoKlFQMCU0"
          }
        }
      },
      "CreateAccountRequest": {
        "type": "object",
        "required": ["name", "email", "password", "phone", "city", "state"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "JoÃ£o Silva"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "joao@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "senha123456"
          },
          "phone": {
            "type": "string",
            "example": "+55 11 99999-9999"
          },
          "city": {
            "type": "string",
            "example": "SÃ£o Paulo"
          },
          "state": {
            "type": "string",
            "pattern": "^[A-Z]{2}$",
            "example": "SP"
          }
        }
      },
      "UpdateAccountRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "JoÃ£o Silva Santos"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "joao.santos@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "novasenha123"
          },
          "phone": {
            "type": "string",
            "example": "+55 11 88888-8888"
          },
          "city": {
            "type": "string",
            "example": "Rio de Janeiro"
          },
          "state": {
            "type": "string",
            "example": "RJ"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "joao@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "senha123456"
          }
        }
      },
      "Pet": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "ownerId": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "name": {
            "type": "string",
            "example": "Rex"
          },
          "species": {
            "type": "string",
            "example": "dog"
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 40,
            "example": 3
          },
          "size": {
            "type": "string",
            "enum": ["SMALL", "MEDIUM", "LARGE"],
            "example": "LARGE"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 500,
            "example": "Cachorro muito carinhoso e brincalhÃ£o. Gosta de crianÃ§as e outros animais."
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "ADOPTED"],
            "example": "AVAILABLE"
          },
          "photoUrl": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/pet-image.jpg"
          }
        }
      },
      "CreatePetRequest": {
        "type": "object",
        "required": ["name", "species", "gender", "age", "size"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Rex"
          },
          "species": {
            "type": "string",
            "minLength": 1,
            "example": "dog"
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 40,
            "example": 3
          },
          "size": {
            "type": "string",
            "enum": ["SMALL", "MEDIUM", "LARGE"],
            "example": "LARGE"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 500,
            "example": "Cachorro muito carinhoso e brincalhÃ£o. Gosta de crianÃ§as e outros animais."
          }
        }
      },
      "UpdatePetRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Rex Junior"
          },
          "species": {
            "type": "string",
            "minLength": 1,
            "example": "dog"
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 40,
            "example": 4
          },
          "size": {
            "type": "string",
            "enum": ["SMALL", "MEDIUM", "LARGE"],
            "example": "LARGE"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 500,
            "example": "Cachorro muito carinhoso e brincalhÃ£o. Gosta de crianÃ§as e outros animais."
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "ADOPTED"],
            "example": "AVAILABLE"
          }
        }
      },
      "Adoption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "petId": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "adopterId": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED", "COMPLETED"],
            "example": "PENDING"
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-20T15:45:00Z"
          }
        }
      },
      "CreateAdoptionRequest": {
        "type": "object",
        "required": ["petId"],
        "properties": {
          "petId": {
            "type": "string",
            "example": "32021a5f-cbf8-4b55-a686-46f5a3c31da4"
          }
        }
      },
      "AccountNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Account not found"
          }
        }
      },
      "PetNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Pet not found"
          }
        }
      },
      "NotPetOwnerResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Only the owner can delete this pet"
          }
        }
      },
      "AdoptionNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Adoption not found"
          }
        }
      },
      "PetNotAvailableForAdoptionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Pet is not available for adoption"
          }
        }
      },
      "AdoptionAlreadyRequestedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Adoption already requested by this adopter for this pet"
          }
        }
      },
      "UnauthorizedErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "InvalidRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid request"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal server error"
          }
        }
      },
      "EmailAlreadyInUseErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email already exists"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "Account management operations"
    },
    {
      "name": "Pets",
      "description": "Pet management operations"
    },
    {
      "name": "Adoptions",
      "description": "Adoption management operations"
    }
  ]
}
